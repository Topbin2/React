{"ast":null,"code":"var _jsxFileName = \"/Users/a1234/Documents/React/Udemy/order-app/src/store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state;\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/a1234/Documents/React/Udemy/order-app/src/store/CartProvider.jsx"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAA0B;AACtB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AACA,UAAMC,qBAAqB,GAAGP,KAA9B;AACA,UAAMQ,YAAY,GAAGR,KAAK,CAACH,KAAN,CAAYY,MAAZ,CAAmBR,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACHP,MAAAA,KAAK,EAAEW,YADJ;AAEHV,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACD,SAAOP,gBAAP;AACH,CAXD;;AAaA,MAAMc,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMkB,oBAAoB,GAAGV,IAAI,IAAI;AACjCS,IAAAA,kBAAkB,CAAC;AAAEX,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMW,yBAAyB,GAAGC,EAAE,IAAI;AACpCH,IAAAA,kBAAkB,CAAC;AAAEX,MAAAA,IAAI,EAAE,QAAR;AAAkBc,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAChBpB,IAAAA,KAAK,EAAEe,SAAS,CAACf,KADD;AAEhBC,IAAAA,WAAW,EAAEc,SAAS,CAACd,WAFP;AAGhBoB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMV,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport CartContext from './CartContext';\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if(action.type === 'ADD') {\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        const existingCartItemIndex = state\n        const updatedItems = state.items.concat(action.item);\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        }\n    }\n    return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = item => {\n        dispatchCartAction({ type: 'ADD', item: item });\n    };\n\n    const removeItemFromCartHandler = id => {\n        dispatchCartAction({ type: 'REMOVE', id: id });\n    };\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    );\n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}
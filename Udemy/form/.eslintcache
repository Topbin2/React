[{"/Users/a1234/Documents/React/Udemy/form/src/index.js":"1","/Users/a1234/Documents/React/Udemy/form/src/App.js":"2","/Users/a1234/Documents/React/Udemy/form/src/components/SimpleInput.js":"3","/Users/a1234/Documents/React/Udemy/form/src/hooks/use-input.js":"4","/Users/a1234/Documents/React/Udemy/form/src/components/BasicForm.js":"5","/Users/a1234/Documents/React/Udemy/form/src/hooks/user-input.js":"6"},{"size":142,"mtime":1616595887000,"results":"7","hashOfConfig":"8"},{"size":162,"mtime":1649349355483,"results":"9","hashOfConfig":"8"},{"size":2059,"mtime":1649398995679,"results":"10","hashOfConfig":"8"},{"size":684,"mtime":1649350243152,"results":"11","hashOfConfig":"8"},{"size":2734,"mtime":1649399042695,"results":"12","hashOfConfig":"8"},{"size":1084,"mtime":1649398879849,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tnw9op",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/a1234/Documents/React/Udemy/form/src/index.js",[],["28","29"],"/Users/a1234/Documents/React/Udemy/form/src/App.js",[],"/Users/a1234/Documents/React/Udemy/form/src/components/SimpleInput.js",["30"],"import { useState } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = useInput(value => value.trim() !== '');\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangedHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(value => value.includes('@'));\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangedHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangedHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Please enter a valid email</p>\n        )}\n      </div>\n\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","/Users/a1234/Documents/React/Udemy/form/src/hooks/use-input.js",[],"/Users/a1234/Documents/React/Udemy/form/src/components/BasicForm.js",[],"/Users/a1234/Documents/React/Udemy/form/src/hooks/user-input.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":10,"nodeType":"37","messageId":"38","endLine":1,"endColumn":18},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]